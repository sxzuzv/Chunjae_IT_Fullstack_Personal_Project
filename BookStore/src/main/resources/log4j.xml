<?xml version="1.0" encoding="UTF-8"?>
<!--<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">-->
<!DOCTYPE log4j:configuration SYSTEM "http://logging.apache.org/log4j/1.2/apidocs/org/
                                        apache/log4j/xml/doc-files/log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

    <!-- Appenders -->
    <!-- ConsoleAppender 클래스를 설정하여 로그 정보를 콘솔에 출력한다. -->
    <appender name="console" class="org.apache.log4j.ConsoleAppender">
        <!-- System.out을 사용하여 콘솔에 출력한다. -->
        <param name="Target" value="System.out" />
        <!-- PatternLayout 클래스로 로그 정보의 출력 형태를 설정한다. -->
        <layout class="org.apache.log4j.PatternLayout">
            <!-- ConversionPattern으로 패턴을 설정하여 지정한 출력 형식이 되도록 지정한다. -->
            <!-- [형식] priority 출력 : package 출력 - 로그 내용 출력 개행문자(\n) 출력 -->
<!--            <param name="ConversionPattern" value="%-5p: %c - %m%n" />-->
            <!-- 출력 형식을 아래와 같이 변경한다. -->
            <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n" />
        </layout>
    </appender>

    <!-- 파일로 로그 기록 출력 -->
    <!-- file 출력을 설정한다. -->
    <appender name="monitor" class="org.apache.log4j.RollingCalendar">
        <!-- 기존 로그 파일을 지우고 새로 생성한다. -->
        <param name="append" value="false"/>
        <!-- 파일 크기를 설정한다. (최댓값 10MB) -->
        <param name="maxFileSize" value="10KB"/>
        <!-- 생성할 백업 파일 수를 설정한다. (기본값 1) -->
        <param name="maxBackupIndex" value="5"/>
        <!-- 로그 파일 이름을 설정한다. -->
        <param name="file" value="c:/logs/monitor.log"/>
        <!-- 레이아웃을 설정한다. -->
        <layout class="org.apache.log4j.PatternLayout">
            <!-- 출력 형식을 설정한다. -->
            <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n"/>
        </layout>
        <!-- 로깅 레벨의 범위를 지정하는 클래스를 설정한다. -->
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <!-- 로깅 레벨의 최하위 레벨을 설정한다. (info) -->
            <param name="LevelMin" value="info"/>
            <!-- 로깅 레벨의 최상위 레벨을 설정한다. (info) -->
            <param name="LevelMax" value="info"/>
        </filter>
    </appender>

    <!-- file 출력을 설정한다. (아래는 'monitor'와 주석 동일) -->
    <appender name="audit" class="org.apache.log4j.RollingFileAppender">
        <param name="append" value="false"/>
        <param name="maxFileSize" value="10KB"/>
        <param name="maxBackupIndex" value="5"/>
        <param name="file" value="c:/logs/audit.log"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n"/>
        </layout>
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <param name="LevelMin" value="warn"/>
            <param name="LevelMax" value="warn"/>
        </filter>
    </appender>

    <!-- Application Loggers -->
    <!-- name 속성 : 실제 로그 기능을 수행하는 객체를 설정한다. -->
    <logger name="com.springmvc">
        <!-- 설정한 객체의 로깅 레벨을 info로 설정한다. -->
        <level value="info" />
        <!-- 파일 출력을 설정한다. -->
        <appender-ref ref="monitor"/>
        <!-- 파일 출력을 설정한다. -->
        <appender-ref ref="audit"/>
    </logger>

    <!-- 3rdparty Loggers -->
    <logger name="org.springframework.core">
        <level value="info" />
    </logger>

    <logger name="org.springframework.beans">
        <level value="info" />
    </logger>

    <logger name="org.springframework.context">
        <level value="info" />
    </logger>

    <logger name="org.springframework.web">
        <level value="info" />
    </logger>

    <!-- Root Logger -->
    <!-- <root> 요소로 최상위 로거를 설정한다. -->
    <root>
        <!-- 로깅 레벨 info 이상을 출력한다. -->
        <priority value="warn" />
        <!-- <appender> 요소에 설정된 name 속성 값인 console을 참조한다. -->
        <!-- <appender> 요소는 <logger> 요소보다 앞에 선언되어 있어야 한다. -->
        <appender-ref ref="console" />
    </root>

</log4j:configuration>