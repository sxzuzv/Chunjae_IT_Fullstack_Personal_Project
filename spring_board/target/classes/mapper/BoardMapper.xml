<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace는 어떤 Mapper.xml 파일인지에 따라 명칭을 지정한다. -->
<mapper namespace="Board">
    <!-- kr.co.chunjae.dto.BoardDTO를 'board'로 별칭하여 사용한다. (typeAlias) -->
    <insert id="write" parameterType="board">
        insert into board_table(boardWriter, boardPass, boardTitle, boardContents)
        values(#{boardWriter}, #{boardPass}, #{boardTitle}, #{boardContents})
    </insert>

    <select id="findAll" resultType="board">
        select id, boardWriter, boardPass, boardTitle, boardContents, boardCreatedTime, boardHits, fileAttached
        from board_table
        order by id desc
    </select>

    <select id="findById" parameterType="Long" resultType="board">
        select id, boardWriter, boardPass, boardTitle, boardContents, boardCreatedTime, boardHits, fileAttached
        from board_table
        where id = #{id}
    </select>

    <update id="updateHits" parameterType="Long">
        update board_table
        set boardHits = boardHits + 1
        where id = #{id}
    </update>

    <delete id="deleteById" parameterType="Long">
        delete from board_table where id = #{id}
    </delete>

    <update id="update" parameterType="board">
        update board_table
        set boardTitle = #{boardTitle}, boardContents = #{boardContents}
        where id = #{id}
    </update>

    <select id="pagingList" parameterType="java.util.HashMap" resultType="board">
        select *
        from board_table
        order by id desc limit #{start}, #{limit}
    </select>

    <select id="boardCount" resultType="Integer">
        select count(id)
        from board_table
    </select>
</mapper>